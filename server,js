const inquirer = require('inquirer');

// Import and require mysql2
const mysql = require('mysql2');

// Connect to database
const db = mysql.createConnection(
    {
      host: 'localhost',
      // MySQL username,
      user: 'root',
      // TODO: Add MySQL password here
      password: '',
      database: 'employeetrack_db'
    },
    console.log(`Connected to the employeetrack_db database.`)
);

connection.connect(function (err){
    if (err) throw err;
    firstPrompt();
})

//run the sart function
function firstPrompt(){
    inquirer.prompt([
        {
            type: 'list',
            name: 'userChoice',
            message; 'Waht would you like to do?',
            choices; [
                'View All Employees',
                'View Employees by Department', 
                'Add Employee',
                'Remove Employee',
                'Update Employee Role', 
                'Add Role', 
                'Add Department',
                'Exit'
            ]
        }
    
    ]).then((res) =>{
        console.log(res.userChoice);
        switch(res.userChoice){
            case 'View All Employee':
            viewAllEmployees();   
            break;
            
            case 'View Employees by Department':
                viewEmployeesByDepartment();
                break;

            case 'Add Employee':
                AddEmployee();
                break;

            case 'Remove Employee':
                RemoveEmployee();
                break;

            case 'Update Employee Role':
                updateEmployeeRole();
                break;

            case 'Add Role':
                addRole();
                break;

            case 'Add Department':
                addDepartment();
                break;
            
            case 'Exit':
                connection.end();
                break;
        }

    function viewAllEmployees(){
        let query = 
        `SELECT
            employee.id,
            employee.first_name,
            employee.last_name, 
            role.title, 
            department.name AS department, 
            role.salary, 
            CONCAT (manager.first_name, '', manager.last_name) AS manager
        FROM employee
        LEFT JOIN role
            ON employee.role_id = role.id
        LEFT JOIN department
            ON department.id = role.department_id
        LEFT JOIN employee manager
            ON manager.id = employee.manager_`
    
     connection.query (query, (err, res) => {
        if (err) throw err;
        console.table(res);
        firstPrompt
        });

            //view employees by department
            function viewEmployeesByDepartment(){
                let query = 
                `SELECT 
                    department.id, 
                    department.name, 
                    role.salary
                FROM employee
                LEFT JOIN role
                    ON employee.role_id = role.id
                LEFT JOIN department
                    ON department.id = role.department_id
                    GROUP BY department.id, department.name, role.salary`;
            connection.query(query, (err, res) =>{
                if (err) throw err;
                const departChoices = res.map((choices) =>({
                    value: choices.id, name: choices.name
                }));
                console.table(res);
                getDept(departChoices);
            });
        }
    }
    //Get Department
    function getDept(departChoices){
        inquirer
            .prompt([
                {
                    type: 'list', 
                    name: 'department', 
                    message: 'Department:', 
                    choices: departChoices
                }
            ]).then((res) =>{
                let query = `SELECT 
                            employee.id, 
                            employee.first_name, 
                            employee.last_name, 
                            role.title, 
                            department.name
                        FROM employee
                        JOIN role
                            ON emplyee.role_id = role.id
                        JOIN department
                            ON department.id = role.department_id
                        WHERE department.id = ?`
            connection.query(query, res.department, (err, res) => {
                if(err)throw err;
                    firstPrompt();
                    console.log(res);
            });
        })
    }
    //add and employe
    function addEmploye(){
        let query = 
        `SELECT 
            role.id, 
            role.title, 
            role.salary
        FROM role`

    connection.query(query, (err, res) =>{
        if (err) throw err;
        const role = res.map (({is, title, salary}) =>({
            value: id, 
            title: `${title}`, 
            salary: `${salary}`
        }));
        console.table(res);
        employeeRoles(role);
    });
    }

    function employeeRoles(role) {
        inquirer
        .prompt([
            {
                type: "input", 
                name: "firstName", 
                message: "Employee First Name: "
            },
            {
                type: "input", 
                name: "lastName", 
                message: "Employee Last Name: "
            }, 
            {
                type: "list", 
                name: "roleId", 
                message: 'Emplyee Role: ', 
                choices: role
            }
        ]).then ((res) => {
            let query = `INSER INTO employee SET ? `
            connection.query(query, {
                first_name: res.firstName, 
                last_name: res.lastName, 
                role_id: res.roleId
            });
        });
    }

    //Remove Employee
    })
}